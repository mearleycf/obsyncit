name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request_target:
    branches: [ "main" ]

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

permissions:
  contents: read
  id-token: write
  security-events: write
  checks: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5  # Updated to v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install uv
        uv pip install -e ".[dev]"
    
    - name: Run pre-commit hooks
      uses: pre-commit/action@v3.0.0
    
    - name: Check types with mypy
      run: |
        mypy obsyncit tests
    
    - name: Lint and format with ruff
      run: |
        ruff check .
        ruff format --check .
    
    - name: Run tests with pytest
      run: |
        pytest -v --cov=obsyncit --cov-report=xml
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}