[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "obsyncit/_version.py"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=obsyncit --cov-report=xml --cov-report=html"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test", "Describe"]
python_functions = ["test_*", "it_*", "they_*"]

[tool.coverage.run]
branch = true
source = ["obsyncit"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "C90", # mccabe
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "S",   # flake8-bandit
]
ignore = []

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert statements in tests

[tool.pylint.master]
init-hook='import sys; sys.path.append(".")'
ignore=".git"
ignore-patterns="test_.*?py"

[tool.pylint.messages_control]
disable = [
    "C0111",  # Missing docstring
    "C0103",  # Invalid name
    "C0330",  # Wrong hanging indent
    "C0326",  # Bad whitespace
    "W0621",  # Redefining name from outer scope
    "W0511",  # TODO comments
    "R0903",  # Too few public methods
    "R0913",  # Too many arguments
    "R0914",  # Too many local variables
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.reports]
output-format = "colorized"
reports = "no"
score = "yes"